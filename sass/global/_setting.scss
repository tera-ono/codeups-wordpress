@use "sass:math";

////////////////////
// インナー幅設定
////////////////////
// コンテンツのインナー幅（最も共通の幅が多い部分）
$inner: 1100px;
// ※キャンパス幅ではなくインナーの幅を指す

// 余白
$padding-pc: 25px;
$padding-sp: 20px;
// ※PC時：デザインカンプの余白の幅ではない。PC時は通常25pxで大丈夫！


////////////////////
// フォント設定
////////////////////

$base-font-family: 'Noto Sans JP', sans-serif;
$second-font-family: 'Noto Serif JP', serif;
// ※検証ツールでしっかり反映されているか確認する


// フォントウェイト
$regular: 400;
$medium: 500;
$bold: 700;
$ex-bold: 900;

////////////////////
// 色の指定
////////////////////

//色指定（共通性のあるものは出来る限り指定すると良い）
// $main: #3e5b9c;
$bg-black: #111111;
$black: #000000;
$white: #FFFFFF;
$gray: #333333;
$yellow: #FFEA2E;
$accent: #F9F871;
$banana: #FFF9C4;
$brown: #6D4C41;
$main-bg: $bg-black;
$sub-bg: $gray;

body {
  position: relative;
  font-family: $base-font-family;
  // background-color: $main-bg;
  background-image: linear-gradient(60deg, #0b0c0c 0%, #083d3d 30%, #070707 100%);
  color: $white;
  /* --- ドロワーメニュー表示時背景スクロール禁止 --- */
  &.is-open {
    overflow: hidden;
  }
}

////////////////////
// opacity
////////////////////
$opacity: 0.7;

////////////////////
//z-index
////////////////////
$header_z-index: 200;
$drawer_z-index: 100;
$header-logo_z-index: 300;
$mobile-menu_z-index: 300;
$scrollTop_z-index: 100;

////////////////////
// transition-duration
////////////////////
$transition-duration: 0.3s;


////////////////////
// メディアクエリとブレークポイントの設定
////////////////////

//ブレイクポイント
$breakpoints: (
  sm: 375,
  md: 768,
  lg: 1024,
  xl: 1366,
  xxl: 1600,
);


//メディアクエリー
$mediaquerys: (
  sm: "screen and (min-width: #{map-get($breakpoints,'sm')}px)",
  md: "screen and (min-width: #{map-get($breakpoints,'md')}px)",
  lg: "screen and (min-width: #{map-get($breakpoints,'lg')}px)",
  xl: "screen and (min-width: #{map-get($breakpoints,'xl')}px)",
  xxl: "screen and (min-width: #{map-get($breakpoints,'xxl')}px)",
);

// @include mq(){}で書くとブレークポイントが反映される（初期値はmd）
@mixin mq($mediaquery: md) {
  @media #{map-get($mediaquerys, $mediaquery)} {
    @content;
  }
}

// remへの計算式（16pxを基準としている。10pxを基準とする場合は16を10に変更する）
@function rem($pixels) {
  @return math.div($pixels, 16) * 1rem;
}



